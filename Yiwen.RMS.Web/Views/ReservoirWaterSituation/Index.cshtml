<link rel="stylesheet" type="text/css" href="~/Content/handsontable.full.css" />
<link rel="stylesheet" type="text/css" href="~/Content/themes/default/easyui.css" />
<script src="~/Scripts/handsontable.full.js"></script>
<script src="~/Scripts/xlsx.full.min.js"></script>
<script src="~/Scripts/jquery-1.11.3.min.js" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.easyui.min.js")"></script>

<style>
    * {
        margin: 0;
        padding: 0;
    }

    body {
        font-family: Helvetica Neue, Helvetica, PingFang SC, Hiragino Sans GB, Microsoft YaHei, SimSun, sans-serif;
        overflow: auto;
        font-weight: 400;
        -webkit-font-smoothing: antialiased;
    }
</style>
<script>
    const filterVal = {//<=====值转化
        "pwd": function (value) {
            return "假装 被加密了"
        },
        "sex": function (key) {
            key = { "男": 0, "女": 1, "": 0, undefined: 0 }[key];
            return key ? key : 0;
        }
    };
        //---导入头信息 结束--
</script>

<body style="padding:10px;">
    <script>
        var hot;
        function saveData() {//<====获取真实数据
            var tmp = [];
            hot.getSourceData().forEach(function (value, index, array) {
                if (index > 0) {
                    var t = new Object();
                    for (var k in value) {
                        t[k] = filterVal[k] ? filterVal[k](value[k]) : value[k];//<====将xlsx数据转为实际需要的值
                    }
                    tmp.push(t);
                }
            });
            /*
            *更多规则自己定义吧
            */
            $.ajax({
                url: '@Url.Action("Save", "ReservoirWaterSituation")',
                data: { "data":JSON.stringify(tmp) },
                 type: 'POST',
                 success: function (result) {
                     if (result.Success) {
                        $.messager.alert({
                            title: '操作提示',
                            msg: '保存成功！',
                            icon: 'info',
                        });
                     } 
                 }
             });
        }
        //------导入导出 -----
    </script>

    <div style="overflow:hidden;">
        <div style="float:left;width:40%;"><input type="button" id="btnSave" value=" 保存数据 " onclick="saveData()" style="padding:3px;" />&nbsp;</div>
        <div style="float:left;width:60%;">
            <input type="button" value=" 前一天 " id="btnPre" onclick="setDateBox(-1)" style="padding:3px;" />
            <input class="easyui-datebox" name="showDate" id="showDate" data-options="formatter:myformatter,parser:myparser" style="width:120px;height:28px;" />
            <input type="button" value=" 今天 " id="btnToday" onclick="setDateBox(0)" style="padding:3px;display:none;" />
            <input type="button" value=" 后一天 " id="btnNext" onclick="setDateBox(1)" style="padding:3px; display:none;" />
        </div>
    </div>
    <div id="hot" style="margin-top:10px;"></div>
    <script>
        function myformatter(date) {
            var y = date.getFullYear();
            var m = date.getMonth() + 1;
            var d = date.getDate();
            return y + '-' + (m < 10 ? ('0' + m) : m) + '-'
                + (d < 10 ? ('0' + d) : d);
        }
        function myparser(s) {
            if (!s)
                return new Date();
            var ss = (s.split('-'));
            var y = parseInt(ss[0], 10);
            var m = parseInt(ss[1], 10);
            var d = parseInt(ss[2], 10);
            if (!isNaN(y) && !isNaN(m) && !isNaN(d)) {
                return new Date(y, m - 1, d);
            } else {
                return new Date();
            }
        }
        $(function () {
            $('#showDate').datebox('calendar').calendar({
                validator: function (date) {
                    var now = new Date();
                    var d1 = new Date(now.getFullYear(), now.getMonth(), now.getDate());
                    return d1 >= date;
                }
            });
            setDateBox(0);
        });

        function setDateBox(flag){
            $("#showDate").datebox("setValue", getDate(flag));
        }

        function getDate(flag){
            var curr_time;
            if (flag == 0) {
                curr_time = new Date();
            } else {
                curr_time = new Date(($("#showDate").datebox("getValue")));
            }
            curr_time.setDate(curr_time.getDate() + flag);
            var strDate = curr_time.getFullYear() + "-";
            strDate += formatMonthDate(curr_time.getMonth() + 1) + "-";
            strDate += formatMonthDate(curr_time.getDate());
            return strDate;
        }

        function formatMonthDate(value){
            if (value < 10) {
                return "0" + value;
            } else {
                return value;
            }
        }

        $('#showDate').datebox({
            onChange: function () {
                var date = $(this).datebox("getValue");
                var btnToday = $("#btnToday");
                var btnNext = $("#btnNext");
                var btnSave = $("#btnSave");
                if (date == getDate(0)) {
                    btnNext.hide();
                    btnToday.hide();
                    btnSave.show();
                } else {
                    btnToday.show();
                    btnNext.show();
                    btnSave.hide();
                }
                $.ajax({
                    url: '@Url.Action("Search","ReservoirWaterSituation")?date='+date,
                     type: 'GET',
                     success: function (result) {
                         if (result.Success) {
                             $("#hot").empty();
                             showDatas(result.MessageCode, result.Message);
                         }
                     }
                 });
            }
        })

        function showDatas(code,all_datas) {
            //----handsontable 初始化 开始------
            var hotElement = document.querySelector('#hot');//<====绑定handsontable初始化div

            var data = [
                ["水库", "测量项", "8时", "20时", "统计项", "指数/数据"]
            ];

            if (code == 0) {
                var items = all_datas.split('|');

                var arr1 = items[0].split(',');
                var arr2 = items[1].split(',');

                var i = 0;
                arr1.forEach(function (value) {
                    var temp = ["大北沟", value, "", "", arr2[i], ""];
                    data.push(temp);
                    i++;
                })  
            }
            else {
                var datas = all_datas.split(',');
                datas.forEach(function (value) {
                    var arr = value.split(':');
                    var temp = [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]];
                    data.push(temp);
                })  
            }

            var settings = {
                data: data,
                copyable: true,
                className: 'htCenter htMiddle',
                manualColumnResize: true,//当值为true时，允许拖动，当为false时禁止拖动
                manualRowResize: true,//当值为true时，允许拖动，当为false时禁止拖动
                //stretchH: "all",     //last:延伸最后一列,all:延伸所有列,none默认不延伸。
                manualColumnMove: true,// 当值为true时，列可拖拽移动到指定列
                manualRowMove: true,// 当值为true时，行可拖拽至指定行
                rowHeaders: false, //当值为true时显示行头，当值为数组时，行头为数组的值
                colHeaders: false,
                sortIndicator: true,
                maxRows:6,
                contextMenu: true,//显示右键菜单
                autoColumnSize: true, //当值为true且列宽未设置时，自适应列大小
                mergeCells: [{ row: 1, col: 0, rowspan:5, colspan: 1 }],
                cells: function (row, column) {
                    var cellMeta = {};
                    if (row == 0 || column == 0 || column == 1 || column == 4 || (column==5 && row>2 )) {
                        cellMeta.readOnly = true;
                    }
                    return cellMeta;
                },
                cell: [{ row: 12, col: 11, className: 'htLeft' }],
                wordWrap: true,
                colWidths: [150, 150, 150, 150, 150, 150]
            }
            hot = new Handsontable(hotElement, settings);
            //var hot = new Handsontable(hotElement, hotSettings);
        }
    //----handsontable 初始化 完成------
    </script>
</body>