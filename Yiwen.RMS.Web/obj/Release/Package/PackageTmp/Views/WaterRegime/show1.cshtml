<link rel="stylesheet" type="text/css" href="~/Content/handsontable.full.css" />
<link rel="stylesheet" type="text/css" href="~/Content/themes/default/easyui.css" />
<script src="~/Scripts/handsontable.full.js"></script>
<script src="~/Scripts/xlsx.full.min.js"></script>
<script src="~/Scripts/jquery-1.11.3.min.js" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.easyui.min.js")"></script>

<style>
    * {
        margin: 0;
        padding: 0;
    }

    body {
        font-family: Helvetica Neue, Helvetica, PingFang SC, Hiragino Sans GB, Microsoft YaHei, SimSun, sans-serif;
        overflow: auto;
        font-weight: 400;
        -webkit-font-smoothing: antialiased;
    }
</style>

<body style="padding:10px;">
    <script>
       
        function saveData() {//<====获取真实数据
            var tmp = [];
            hot.getSourceData().forEach(function (value, index, array) {
                if (index > 1) {
                    var t = new Object();
                    for (var k in value) {
                        t[k] = filterVal[k] ? filterVal[k](value[k]) : value[k];//<====将xlsx数据转为实际需要的值
                    }
                    tmp.push(t);
                }
            });
            /*
            *更多规则自己定义吧
            */
            //alert(JSON.stringify(tmp));
            $.ajax({
                url: '@Url.Action("Save","WaterRegime")',
                data: { "data":JSON.stringify(tmp) },
                 type: 'POST',
                 success: function (result) {
                     //console.log(result);
                     if (result.Success) {
                        $.messager.alert({
                            title: '操作提示',
                            msg: '保存成功！',
                            icon: 'info',
                        });
                     } 
                 }
             });
        }
        //------导入导出 -----
    </script>
  
    <div id="hot" style="margin-top:10px;"></div>
    <script>
        function myformatter(date) {
            var y = date.getFullYear();
            var m = date.getMonth() + 1;
            var d = date.getDate();
            return y + '-' + (m < 10 ? ('0' + m) : m) + '-'
                + (d < 10 ? ('0' + d) : d);
        }
        function myparser(s) {
            if (!s)
                return new Date();
            var ss = (s.split('-'));
            var y = parseInt(ss[0], 10);
            var m = parseInt(ss[1], 10);
            var d = parseInt(ss[2], 10);
            if (!isNaN(y) && !isNaN(m) && !isNaN(d)) {
                return new Date(y, m - 1, d);
            } else {
                return new Date();
            }
        }
        $(function () {
            var curr_time = new Date();
            curr_time.setDate(curr_time.getDate() - 1);
            var strDate = curr_time.getFullYear() + "-";
            strDate += curr_time.getMonth() + 1 + "-";
            strDate += curr_time.getDate();
            $.ajax({
                url: '@Url.Action("search","WaterRegime")?date=' + strDate,
                     type: 'GET',
                     success: function (result) {
                         if (result.Success) {
                             $("#hot").empty();
                             showDatas(result.MessageCode, result.Message);
                         }
                     }
                 });
           
           
        });


        function showDatas(code,all_datas) {
            //----handsontable 初始化 开始------
            var hotElement = document.querySelector('#hot');//<====绑定handsontable初始化div

            var data = [
                ["干渠输水情况", "", "", "灌区用水情况", "", "", "", "", "", "", "", "", ""]
                , ["灌区", "交接断面", "过水流量", "站名", "引水流量", "站名", "引水流量", "站名", "引水流量", "站名", "引水流量", "站名", "引水流量"]
            ];

            if (code == 0) {
                var items = all_datas.split('|');

                var arr1 = items[0].split(',');
                var arr2 = items[1].split(',');
                var arr3 = items[2].split(',');
                var arr4 = items[3].split(',');

                var arr41 = [], arr42 = [], arr43 = [], arr44 = [], arr45 = [];
                arr4.forEach(function (value) {
                    if (arr41.length < arr1.length) {     //arr1.length 即为灌区塬上部分数据行数
                        arr41.push(value);
                    }
                    else if (arr42.length < arr1.length) {
                        arr42.push(value);
                    }
                    else if (arr43.length < arr1.length) {
                        arr43.push(value);
                    }
                    else if (arr44.length < arr1.length) {
                        arr44.push(value);
                    }
                    else if (arr45.length < arr1.length) {
                        arr45.push(value);
                    }
                })

                var i = 0;
                arr1.forEach(function (value) {
                    var tmp5 = arr45[i] ? arr45[i] : "";
                    var temp = ["塬上", value, "", arr41[i], "", arr42[i], "", arr43[i], "", arr44[i], "", tmp5, ""];
                    data.push(temp);
                    i++;
                })
                i = 0;
                arr2.forEach(function (value) {
                    if (i == 0) {
                        var temp = ["塬下", value, "", "干 渠 退 水", "", "水     库    水    情", "", "", "", "", "", "备       注", ""];
                        data.push(temp);
                    }
                    else if (i == 1) {
                        var temp = ["塬下", value, "", "闸    名", "流  量", "库   名", "水  位", "蓄水量", "兴利调度", "防汛泄洪", "正常水位", "", ""];
                        data.push(temp);
                    }
                    else {
                        var temp = ["塬下", value, "", "", "", arr3[i - 2], "", "", "", "", "", "", ""];
                        data.push(temp);
                    }
                    i++;
                })
                var tmp = ["全局引抽总量", "", "", "", "", "塬上含沙量%", "", "", "塬下含沙量%", "", "", "", ""];
                data.push(tmp);
            }
            else {
                var datas = all_datas.split('|');
                var arr1 = datas[0].split(',');
                var arr2 = datas[1].split(',');
                var arr3 = datas[2].split(',');
                var arr4 = datas[3].split(',');
                var arr5 = datas[4].split(',');
                var arr6 = datas[5].split(',');
                var datas7 = datas[6];
                var datas8 = datas[7];

                var arr41 = [], arr42 = [], arr43 = [], arr44 = [], arr45 = [];
                arr4.forEach(function (value) {
                    if (arr41.length < arr1.length) {     //arr1.length 即为灌区塬上部分数据行数
                        arr41.push(value);
                    }
                    else if (arr42.length < arr1.length) {
                        arr42.push(value);
                    }
                    else if (arr43.length < arr1.length) {
                        arr43.push(value);
                    }
                    else if (arr44.length < arr1.length) {
                        arr44.push(value);
                    }
                    else if (arr45.length < arr1.length) {
                        arr45.push(value);
                    }
                })

                var i = 0;
                arr1.forEach(function (value) {
                    var it5 = arr45[i] ? arr45[i].split(':')[0] : "";
                    var val5 = arr45[i] ? arr45[i].split(':')[1] : "";
                    var temp = ["塬上", value.split(':')[0], value.split(':')[1], arr41[i].split(':')[0], arr41[i].split(':')[1], arr42[i].split(':')[0], arr42[i].split(':')[1]
                        , arr43[i].split(':')[0], arr43[i].split(':')[1], arr44[i].split(':')[0], arr44[i].split(':')[1], it5, val5];
                    data.push(temp);
                    i++;
                })
                i = 0;
                arr2.forEach(function (value) {
                    if (i == 0) {
                        var temp = ["塬下", value.split(':')[0], value.split(':')[1], "干 渠 退 水", "", "水     库    水    情", "", "", "", "", "", "备       注", ""];
                        data.push(temp);
                    }
                    else if (i == 1) {
                        var temp = ["塬下", value.split(':')[0], value.split(':')[1], "闸    名", "流  量", "库   名", "水  位", "蓄水量", "兴利调度", "防汛泄洪", "正常水位", datas7, ""];
                        data.push(temp);
                    }
                    else {
                        var it5 = arr5[i - 2] ? arr5[i - 2].split(':')[0] : "";
                        var val5 = arr5[i - 2] ? arr5[i - 2].split(':')[1] : "";
                        var temp = ["塬下", value.split(':')[0], value.split(':')[1], it5, val5, arr3[i - 2].split(':')[0]
                            , arr3[i - 2].split(':')[1], arr3[i - 2].split(':')[2], arr3[i - 2].split(':')[3], arr3[i - 2].split(':')[4], arr3[i - 2].split(':')[5], "", ""];
                        data.push(temp);
                    }
                    i++;
                })
                var flag_it = "", flag_val = "";
                if (arr5.length > arr2.length - 2) {
                    flag_it = arr5[length - 1].split(':')[0];
                    flag_val = arr5[length - 1].split(':')[1];
                }
                var tmp = [datas8.split(':')[0], "", datas8.split(':')[1], flag_it, flag_val, arr6[0].split(':')[0], "", arr6[0].split(':')[1], arr6[1].split(':')[0], "", arr6[1].split(':')[1], "", ""];
                data.push(tmp);
            }

            var settings = {
                data: data,
                rowHeaders: true,
                colHeaders: true,
                copyable: true,
                className: 'htCenter htMiddle',
                manualColumnResize: true,//当值为true时，允许拖动，当为false时禁止拖动
                manualRowResize: true,//当值为true时，允许拖动，当为false时禁止拖动
                //stretchH: "all",     //last:延伸最后一列,all:延伸所有列,none默认不延伸。
                manualColumnMove: true,// 当值为true时，列可拖拽移动到指定列
                manualRowMove: true,// 当值为true时，行可拖拽至指定行
                rowHeaders: true, //当值为true时显示行头，当值为数组时，行头为数组的值
                sortIndicator: true,
                contextMenu: true,//显示右键菜单
                autoColumnSize: true, //当值为true且列宽未设置时，自适应列大小
                mergeCells: [{ row: 0, col: 0, rowspan: 1, colspan: 3 }, { row: 0, col: 3, rowspan: 1, colspan: 10 }, { row: 2, col: 0, rowspan: 9, colspan: 1 }
                    , { row: 11, col: 0, rowspan: 8, colspan: 1 }, { row: 11, col: 3, rowspan: 1, colspan: 2 }, { row: 11, col: 5, rowspan: 1, colspan: 6 }, { row: 11, col: 11, rowspan: 1, colspan: 2 }, { row: 12, col: 11, rowspan: 8, colspan: 2 }
                    , { row: 19, col: 0, rowspan: 1, colspan: 2 }, { row: 19, col: 5, rowspan: 1, colspan: 2 }, { row: 19, col: 8, rowspan: 1, colspan: 2 }],
                cells: function (row, column) {
                    var cellMeta = {};
                    if (row < 2 || column < 2 || (column % 2 == 1 && row <= 11) || (row == 12 && column > 2 && column < 11) || column == 5 || (column == 8 && row == 19)
                        || (column == 4 && row == 6) || (column == 6 && row == 3) || (column == 6 && row == 8) || (column == 8 && row == 5) || (column == 10 && row == 5) || (column == 12 && row == 2) || (column == 12 && row == 3)) {
                        cellMeta.readOnly = true;
                    }
                    return cellMeta;
                },
                cell: [{ row: 12, col: 11, className: 'htLeft' }],
                wordWrap: true,
                colWidths: [60, 100, 85, 100, 85, 100, 85, 100, 85, 100, 85, 100, 85]
            }
            var hot = new Handsontable(hotElement, settings);
            //var hot = new Handsontable(hotElement, hotSettings);
        }
    //----handsontable 初始化 完成------
    </script>
</body>